#! /bin/bash
# enable programmable completion 
[[ -r "/opt/homebrew/etc/profile.d/bash_completion.sh" ]] && . "/opt/homebrew/etc/profile.d/bash_completion.sh"
[[ -r "/usr/share/bash-completion/bash_completion" ]] && . "/usr/share/bash-completion/bash_completion"
[[ -r "/etc/bash_completion" ]] && . "/etc/bash_completion"

# Add tab completion for SSH hostnames based on ~/.ssh/config
# ignoring wildcards
[[ -e "$HOME/.ssh/config" ]] && complete -o "default" \
	-o "nospace" \
	-W "$(grep "^Host" ~/.ssh/config | \
	grep -v "[?*]" | cut -d " " -f2 | \
	tr ' ' '\n')" scp sftp ssh

# SSH auto-completion based on entries in known_hosts.
if [[ -e ~/.ssh/known_hosts ]]; then
  complete -W "$(cut -f 1 -d ' ' < ~/.ssh/known_hosts | sed -e s/,.*//g | uniq | grep -v "\[";)" ssh
fi

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# source kubectl bash completion
if hash kubectl 2>/dev/null; then
	# shellcheck source=/dev/null
	source <(kubectl completion bash)
fi

# source pyenv initializer bash completion
if hash pyenv 2>/dev/null; then
	# shellcheck source=/dev/null
	eval "$(pyenv init -)"
fi

if hash pyenv 2>/dev/null; then
	# shellcheck source=/dev/null
	eval "$(pyenv virtualenv-init -)"
fi

if [[ -e /usr/share/bash-completion/completions/ssh ]]; then
    source /usr/share/bash-completion/completions/ssh
fi

# load nvm and nvm bash completion
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
